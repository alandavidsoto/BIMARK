{"version":3,"sources":["redux/actions/action.js","componentes/helper/http.js","componentes/home/Card.js","util/SetupAlert.js","componentes/SkeletonCard.js","componentes/productos/BanderaCategoria.js","componentes/ofertas/IndexOfertas.js"],"names":["buy_product_action","producto","cant","type","payload","remove_product_action","id","increment_product_action","decrement_product_action","http","url","a","object","fetch","then","res","peticion","response","json","Card","element","skeleton","dispatch","useDispatch","ids","useSelector","state","reducer_product","productos","product","nombre","imagen","precio","descuento","precioFinal","className","src","alt","onClick","includes","SweetAlert","map","prod","cantidad","prevDispatch","to","style","display","text","Alert","title","Swal","fire","icon","confirmButtonText","SkeletonCard","width","height","inline","marginLeft","BanderaCategoria","textFormat","categoria","split","join","IndexOfertas","useState","resultado","setResultado","useEffect","process","resultados","i","push","setSkeletons"],"mappings":"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","file":"static/js/8.b9c62e17.chunk.js","sourcesContent":["\r\nexport const buy_product_action = (producto,cant = 1) =>{\r\n  return {\r\n    type : 'buy_product',\r\n    payload: {producto,cant}\r\n  }\r\n}\r\nexport const remove_product_action = (id) =>{\r\n  return {\r\n    type : 'remove_product',\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const increment_product_action = (id,cant = 1) =>{\r\n  return {\r\n    type : 'increment_product',\r\n    payload: {id,cant}\r\n  }\r\n}\r\n\r\nexport const decrement_product_action = (id) =>{\r\n  return {\r\n    type : 'decrement_product',\r\n    payload: id\r\n  }\r\n}\r\n\r\n\r\n\r\n/* export const fetching = (valor) => {\r\n  return async (dispatch) => {\r\n    const newValor = await fetch(`https://pokeapi.co/api/v2/pokemon/${valor}`)\r\n    const newnewValor = await newValor.json()\r\n    dispatch({\r\n      type: fetch_return,\r\n      payload: newnewValor\r\n    })\r\n  }\r\n} */","export default async function http(url,object = {}){\r\n    try {\r\n        const peticion = await fetch(url,object).then(res => {\r\n            return res\r\n        })\r\n        const response = peticion.json()\r\n        return response\r\n        \r\n    } catch (error) {\r\n        return error\r\n    }\r\n}","import './Card.scss'\r\nimport React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { buy_product_action,increment_product_action } from \"../../redux/actions/action\"\r\nimport { SweetAlert } from \"../../util/SetupAlert\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Card = ({element, skeleton}) => {\r\n    const dispatch = useDispatch()\r\n    const ids = useSelector((state)=> state.reducer_product.ids)\r\n    const productos = useSelector((state) => state.reducer_product.product)\r\n    if(element){\r\n        var {id,nombre,imagen,precio,descuento,precioFinal} = element\r\n    }  \r\n    \r\n\r\n    const prevDispatch = (element) => {\r\n        if (ids.includes(id)){\r\n            dispatch(increment_product_action(id))\r\n        } else {\r\n            dispatch(buy_product_action(element))\r\n            SweetAlert(\"success\",`Se agregó 1 unidad de este Producto `)\r\n        }\r\n        \r\n        productos.map(prod => {\r\n            if(prod.id === id) {\r\n                SweetAlert(\"success\",`Se agregó ${prod.cantidad} unidades de este Producto `)\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <article className=\"card\">\r\n            {(!element)? \r\n                skeleton\r\n            :\r\n                <>\r\n                    {(descuento) && \r\n                        <span className=\"descuento\">\r\n                        {`Desc. del ${descuento}%`}\r\n                        </span>\r\n                    }\r\n                    <div className=\"contenedor-imagen\" >\r\n                        <img src={imagen} alt={nombre}/>\r\n                    </div>\r\n                    <span className=\"nombre_producto\" >\r\n                        {nombre}\r\n                    </span>\r\n                    <div className=\"precio_producto\">\r\n                        {(descuento)? \r\n                        <>\r\n                            <del><span className=\"precio\">$ {precio}<sup>00</sup></span></del>\r\n                            <span className=\"precio_descuento\">$ {precioFinal}<sup>00</sup></span>\r\n                        </>\r\n                        :\r\n                        <span className=\"precio\">$ {precio}<sup>00</sup></span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"contenedor-botones\">\r\n                        <button onClick={()=> prevDispatch(element)} className=\"agregar\">Agregar</button>\r\n                        <button className=\"ver\"><Link to={`productos/${id}`} style={{display: \"block\"}}>Ver</Link></button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </article>\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\n\r\nexport const SweetAlert = (type, text) => {\r\n  switch (type) {\r\n    case \"success\":\r\n      Alert(\"Confirmación\", text || \"¡Se ha realizado con Éxito!\");\r\n      break;\r\n    case \"error\":\r\n      Alert(\"Error\", text || \"¡Ocurrió un Error!\");\r\n      break;\r\n    case \"info\":\r\n      Alert(\"Información\", text || \"Información genérica\");\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  function Alert(title, text) {\r\n    Swal.fire({\r\n      title,\r\n      text,\r\n      icon: type,\r\n      confirmButtonText: \"OK\",\r\n    });\r\n  }\r\n};\r\n","import React from 'react'\r\nimport Skeleton from 'react-loading-skeleton'\r\nexport const SkeletonCard = () => {\r\n    return (\r\n        <>\r\n            <Skeleton width={\"100%\"} height={\"60%\"} />\r\n            <Skeleton width={\"100%\"} height={\"20%\"} />\r\n            <Skeleton width={\"45%\"} height={\"15%\"} inline={true} style={{marginLeft: \"7px\" }}/>\r\n            <Skeleton width={\"45%\"} height={\"15%\"} inline={true} style={{marginLeft: \"6px\" }}/>\r\n        </>\r\n    )\r\n}\r\n","import './BanderaCategoria.scss'\r\nimport React from 'react'\r\n\r\nexport const BanderaCategoria = ({categoria}) => {\r\n    let textFormat;\r\n\r\n    if(categoria.includes(\"_\")) {\r\n        const text = categoria.split(\"_\")\r\n        textFormat = text.join(\" \")\r\n    } else {\r\n        textFormat = categoria\r\n    }\r\n    return (\r\n        <div className=\"bandera-categoria\">\r\n            <span>Categoria {textFormat}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport http from '../helper/http'\r\nimport { Card } from '../home/Card'\r\nimport { BanderaCategoria } from '../productos/BanderaCategoria'\r\nimport { SkeletonCard } from '../SkeletonCard'\r\n\r\nconst IndexOfertas = () => {\r\n    const [resultado,setResultado] = useState(null)\r\n    useEffect(()=>{\r\n        http(`${process.env.REACT_APP_API_URL}/api/ofertas`,).then(res => setResultado(res))\r\n    },[])\r\n    const setSkeletons = (cantidad) => {\r\n        let resultados = [];\r\n        for (let i = 1; i <= cantidad; i++) {\r\n            resultados.push(<Card  key={i} skeleton={<SkeletonCard />} />)\r\n            \r\n        }\r\n        return resultados\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <section>\r\n                <div>\r\n                    <BanderaCategoria categoria=\"OFERTAS\" />\r\n                    <div className=\"grid-destacados\">\r\n                    {(resultado)?\r\n                        resultado.map(element => <Card key={element.id} element={element}/>)\r\n                        :\r\n                        setSkeletons(10)\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\nexport default IndexOfertas;"],"sourceRoot":""}